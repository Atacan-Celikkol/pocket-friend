{"version":3,"sources":["models/date-range.jsx","config.js","models/expense.js","components/Expenses/ExpenseCreate.jsx","components/Expenses/ExpenseItem/index.js","components/Expenses/index.js","components/Header/index.js","models/income.js","components/Incomes/IncomeCreate.jsx","components/Incomes/IncomeItem/index.js","components/Incomes/index.js","components/App/index.js","index.js"],"names":["DateRange","this","startDate","Moment","startOf","endDate","endOf","api_data_url","sortTypes","Ascending","Descending","getApiUrlSimple","tableName","query","getApiUrl","dateRange","sortBy","sortType","valueOf","getApiUrlById","id","Expense","on_date","Date","toISOString","split","description","amount","ExpenseCreate","props","handleChange","e","setState","target","name","parseFloat","value","state","bind","handleSubmit","event","preventDefault","create","fetch","method","body","JSON","stringify","then","res","json","data","getExpenses","catch","console","log","className","type","onClick","disabled","length","onChange","defaultValue","placeholder","step","min","React","Component","ExpenseItem","expense","showUpdate","UpdateRow","parentProps","parentState","show","changeShowUpdate","ViewRow","index","toDateString","delete","update","undefined","text","date","items","Expenses","window","confirm","obj","objectId","startDateId","endDateId","onDatesChange","focusedInput","onFocusChange","isOutsideRange","onClose","setTimeout","map","item","i","key","Header","Income","IncomeCreate","getIncomes","IncomeItem","income","Incomes","App","ReactDOM","render","document","getElementById"],"mappings":"oXAgBeA,EAbZ,aAAgB,oBACbC,KAAKC,UAAYC,MAASC,QAAQ,SAClCH,KAAKI,QAAUF,MAASG,MAAM,UCA9BC,EAAY,UAHG,gCAGH,OAFF,uCAEE,YADE,uCACF,UAELC,EAAY,CACtBC,UAAW,OACXC,WAAY,SAGR,SAASC,EAAgBC,GAA0B,IAAfC,EAAc,uDAAN,KAChD,OAAOA,EAAK,UAAMN,EAAeK,EAArB,YAAkCC,GAAUN,EAAeK,EAGnE,SAASE,EAAUF,GAAiF,IAAtEG,EAAqE,uDAAzD,IAAIf,EAAagB,EAAwC,uCAAhCC,EAAgC,uDAArBT,EAAUC,UAC5F,MAAM,GAAN,OAAUF,EAAeK,EAAzB,gCAA0DI,EAASC,EAAnE,2BAA8FF,EAAUb,UAAUgB,UAAlH,0BAA6IH,EAAUV,QAAQa,WAG3J,SAASC,EAAcP,EAAWQ,GACtC,MAAM,GAAN,OAAUb,EAAeK,EAAzB,YAAsCQ,G,YCf1BC,E,sCALZC,SAAU,IAAIC,MAAOC,cAAcC,MAAM,KAAK,G,KAC9CC,YAAc,G,KACdC,OAAS,GCuDGC,E,YApDZ,WAAaC,GAAQ,IAAD,8BACjB,4CAAMA,KAOTC,aAAe,SAACC,GACb,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAyB,WAAlBH,EAAEE,OAAOC,KAAoBC,WAAWJ,EAAEE,OAAOG,OAASL,EAAEE,OAAOG,SANpG,EAAKC,MAAQ,IAAIhB,EACjB,EAAKS,aAAe,EAAKA,aAAaQ,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBALH,E,0EAYPE,GACVA,EAAMC,iBACNxC,KAAKyC,W,+BAGE,IAAD,OACNC,MAAMhC,EApBE,YAoBsB,CAC3BiC,OAAQ,OACRC,KAAMC,KAAKC,UAAU9C,KAAKoC,SAEzBW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACJ,EAAKnB,SAAS,IAAIX,GAClB,EAAKQ,MAAMuB,iBAEbC,MAAMC,QAAQC,O,+BAGX,IAAD,OACN,OACG,4BACG,wBAAIC,UAAY,eACb,4BAAQC,KAAK,SAASD,UAAY,kCAAoCE,QAAUzD,KAAKsC,aAAeoB,SAAW1D,KAAKoC,MAAMV,QAAU,GAA4B,KAAvB1B,KAAKoC,MAAMf,SAAkBrB,KAAKoC,MAAMX,YAAYkC,OAAS,GAAtM,MAEH,4BACG,2BAAOH,KAAK,OAAOD,UAAY,+BAAiCtB,KAAK,UAAU2B,SAAW5D,KAAK6B,aAAegC,aAAe7D,KAAKoC,MAAMf,WAE3I,4BACG,2BAAOmC,KAAK,OAAOD,UAAY,+BAAiCtB,KAAK,cAAc6B,YAAY,6BAA6B3B,MAAQnC,KAAKoC,MAAMX,YAAcmC,SAAW5D,KAAK6B,gBAEhL,4BACG,2BAAO2B,KAAK,SAASD,UAAY,+BAAiCtB,KAAK,SAASE,MAAQnC,KAAKoC,MAAMV,OAASkC,SAAW,SAAC9B,GAAYA,EAAEE,OAAOG,OAAS,GAAG,EAAKN,aAAaC,IAAQiC,KAAK,OAAOC,IAAI,UAEtM,kC,GA9CgBC,IAAMC,WC0BnBC,E,YA5BX,WAAavC,GAAQ,IAAD,8BAChB,4CAAMA,KAQVC,aAAe,SAACC,GAAO,IAAD,EACkBA,EAA5BE,OAAUC,EADA,EACAA,KAAME,EADN,EACMA,MAClBiC,EAAU,EAAKhC,MAAMgC,QAC3BA,EAAQnC,GAAiB,WAATA,EAAoBC,WAAWC,GAASA,EACxD,EAAKJ,SAAS,CAAEqC,QAASA,KAXzB,EAAKhC,MAAQ,CACTgC,QAAS,EAAKxC,MAAMwC,QACpBC,YAAY,GAEhB,EAAKxC,aAAe,EAAKA,aAAaQ,KAAlB,gBANJ,E,gFAiBhBrC,KAAK+B,SAAS,CAAEsC,YAAarE,KAAKoC,MAAMiC,e,+BAGlC,IAAD,OACL,OAAOrE,KAAKoC,MAAMiC,WACd,kBAACC,EAAD,CAAWC,YAAcvE,KAAK4B,MAAQ4C,YAAcxE,KAAKoC,MAAQP,aAAe,SAACC,GAAD,OAAO,EAAKD,aAAaC,IAAK2C,KAAO,kBAAM,EAAKC,sBAEhI,kBAACC,EAAD,CAASJ,YAAcvE,KAAK4B,MAAQ6C,KAAO,kBAAM,EAAKC,0B,GAzBxCT,IAAMC,WAgChC,SAASS,EAAQ/C,GACb,OACI,4BACI,4BAAMA,EAAM2C,YAAYK,MAAQ,GAChC,4BAAM,IAAItD,KAAKM,EAAM2C,YAAYH,QAAQ/C,SAASwD,gBAClD,4BAAMjD,EAAM2C,YAAYH,QAAQ3C,aAChC,qCAAOG,EAAM2C,YAAYH,QAAQ1C,QAEjC,4BACI,yBAAK6B,UAAY,iCACb,4BAAQC,KAAK,SAASD,UAAY,eAAiBE,QAAU,WAAQ7B,EAAM6C,SAA3E,UACA,4BAAQjB,KAAK,SAASD,UAAY,eAAiBE,QAAU,WAAQ7B,EAAM2C,YAAYO,WAAvF,aAOpB,SAASR,EAAU1C,GACf,OACI,4BACI,4BAAMA,EAAM2C,YAAYK,MAAQ,GAChC,4BACI,2BAAOpB,KAAK,OAAOD,UAAY,+BAAiCtB,KAAK,UAAU2B,SAAWhC,EAAMC,aAAegC,aAAejC,EAAM2C,YAAYH,QAAQ/C,WAE5J,4BACI,2BAAOmC,KAAK,OAAOD,UAAY,+BAAiCtB,KAAK,cAAc2B,SAAWhC,EAAMC,aAAeiC,YAAY,6BAA6BD,aAAejC,EAAM2C,YAAYH,QAAQ3C,eAEzM,4BACI,2BAAO+B,KAAK,SAASD,UAAY,+BAAiCtB,KAAK,SAAS4B,aAAejC,EAAM2C,YAAYH,QAAQ1C,OAASkC,SAAW,SAAC9B,GAAYA,EAAEE,OAAOG,OAAS,GAAGP,EAAMC,aAAaC,IAAQkC,IAAI,OAElN,4BACI,yBAAKT,UAAY,iCACb,4BAAQC,KAAK,SAASD,UAAY,kBAAoBE,QAAU,SAAC3B,GAAQF,EAAM2C,YAAYQ,OAAOnD,EAAM4C,YAAYJ,SAAUxC,EAAM6C,QAAWf,cAAsCsB,IAA3BpD,EAAM4C,YAAYS,OAAuBrD,EAAM4C,YAAY9C,QAAU,GAAgC,KAA3BE,EAAM4C,YAAYU,MAAetD,EAAM4C,YAAYS,KAAKtB,OAAS,IAArS,cC1DpB,IAAIwB,EAAQ,GAyGGC,E,YArGZ,WAAaxD,GAAQ,IAAD,8BACjB,4CAAMA,KAEDQ,MAAQ,IAAIrC,EAEjB,EAAK+E,OAAS,EAAKA,OAAOzC,KAAZ,gBACd,EAAK0C,OAAS,EAAKA,OAAO1C,KAAZ,gBACd,EAAKc,YAAc,EAAKA,YAAYd,KAAjB,gBAPF,E,iFAWjBrC,KAAKmD,gB,oCAGO,IAAD,OACXT,MAAM7B,EAlBE,WAkBeb,KAAKoC,MAAO,UAAW7B,EAAUE,aACpDsC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACJiC,EAAQjC,EACR,EAAKnB,SAAS,EAAKK,UAErBgB,MAAMC,QAAQC,O,6BAGdnC,GAAK,IAAD,OACJkE,OAAOC,QAAQ,mBAChB5C,MAAMxB,EA7BD,WA6BsBC,GAAK,CAC7BwB,OAAQ,WAEPI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACJiC,EAAQjC,EACR,EAAKC,iBAEPC,MAAMC,QAAQC,O,6BAIjBiC,GAAM,IAAD,OACT7C,MAAMxB,EA1CE,WA0CmBqE,EAAIC,UAAW,CACvC7C,OAAQ,MACRC,KAAMC,KAAKC,UAAUyC,KAEpBxC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACJiC,EAAQjC,EACR,EAAKC,iBAEPC,MAAMC,QAAQC,O,+BAGX,IAAD,OACN,OACG,6BACG,yBAAKC,UAAY,UACd,wBAAIA,UAAY,eAAhB,YACA,yBAAKA,UAAY,SACd,yBAAKA,UAAY,eACd,kBAAC,kBAAD,CACGtD,UAAYD,KAAKoC,MAAMnC,UACvBwF,YAAY,uBACZrF,QAAUJ,KAAKoC,MAAMhC,QACrBsF,UAAU,qBACVC,cAAgB,gBAAG1F,EAAH,EAAGA,UAAWG,EAAd,EAAcA,QAAd,OAA4B,EAAK2B,SAAS,CAAE9B,YAAWG,aACvEwF,aAAe5F,KAAKoC,MAAMwD,aAC1BC,cAAgB,SAAAD,GAAY,OAAI,EAAK7D,SAAS,CAAE6D,kBAChDE,eAAiB,kBAAM,GACvBC,QAAU,kBAAMC,YAAW,kBAAM,EAAK7C,gBAAe,WAMjE,yBAAKI,UAAY,oBACd,2BAAOA,UAAY,oCAChB,2BAAOA,UAAY,wBAChB,4BACG,iCACA,oCACA,2CACA,sCACA,yCAGN,+BAEM4B,EAAMc,KAAI,SAACC,EAAMC,GAAP,OACP,kBAAC,EAAD,CAAaC,IAAMD,EAAIvB,MAAQuB,EAAI/B,QAAU8B,EAAOpB,OAAS,kBAAM,EAAKA,OAAOoB,EAAKV,WAAYT,OAAS,SAACX,GAAD,OAAa,EAAKW,OAAOX,UAI3I,+BACG,kBAAC,EAAD,CAAejB,YAAcnD,KAAKmD,sB,GA7FhCc,IAAMC,WCIdmC,G,wLAXT,OACG,yBAAK9C,UAAY,aACd,yBAAKA,UAAY,aACd,wBAAIA,UAAY,aAAhB,iBACA,uBAAGA,UAAY,QAAf,oC,GANMW,cCGNoC,E,sCALZjF,SAAU,IAAIC,MAAOC,cAAcC,MAAM,KAAK,G,KAC9CC,YAAc,G,KACdC,OAAS,GCuDG6E,E,YApDZ,WAAa3E,GAAQ,IAAD,8BACjB,4CAAMA,KAOTC,aAAe,SAACC,GACb,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAyB,WAAlBH,EAAEE,OAAOC,KAAoBC,WAAWJ,EAAEE,OAAOG,OAASL,EAAEE,OAAOG,SANpG,EAAKC,MAAQ,IAAIkE,EACjB,EAAKzE,aAAe,EAAKA,aAAaQ,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBALH,E,0EAYPE,GACVA,EAAMC,iBACNxC,KAAKyC,W,+BAGE,IAAD,OACNC,MAAMhC,EApBE,WAoBsB,CAC3BiC,OAAQ,OACRC,KAAMC,KAAKC,UAAU9C,KAAKoC,SAEzBW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACJ,EAAKnB,SAAS,IAAIuE,GAClB,EAAK1E,MAAM4E,gBAEbpD,MAAMC,QAAQC,O,+BAGX,IAAD,OACN,OACG,4BACG,wBAAIC,UAAY,eACb,4BAAQC,KAAK,SAASD,UAAY,mCAAqCE,QAAUzD,KAAKsC,aAAeoB,SAAW1D,KAAKoC,MAAMV,QAAU,GAA4B,KAAvB1B,KAAKoC,MAAMf,SAAkBrB,KAAKoC,MAAMX,YAAYkC,OAAS,GAAvM,MAEH,4BACG,2BAAOH,KAAK,OAAOD,UAAY,+BAAiCtB,KAAK,UAAU2B,SAAW5D,KAAK6B,aAAegC,aAAe7D,KAAKoC,MAAMf,WAE3I,4BACG,2BAAOmC,KAAK,OAAOD,UAAY,+BAAiCtB,KAAK,cAAc6B,YAAY,6BAA6B3B,MAAQnC,KAAKoC,MAAMX,YAAcmC,SAAW5D,KAAK6B,gBAEhL,4BACG,2BAAO2B,KAAK,SAASD,UAAY,+BAAiCtB,KAAK,SAASE,MAAQnC,KAAKoC,MAAMV,OAASkC,SAAW,SAAC9B,GAAYA,EAAEE,OAAOG,OAAS,GAAG,EAAKN,aAAaC,IAAQiC,KAAK,OAAOC,IAAI,UAEtM,kC,GA9CeC,IAAMC,WC0BlBuC,E,YA5BX,WAAa7E,GAAQ,IAAD,8BAChB,4CAAMA,KAQVC,aAAe,SAACC,GAAO,IAAD,EACkBA,EAA5BE,OAAUC,EADA,EACAA,KAAME,EADN,EACMA,MAClBuE,EAAS,EAAKtE,MAAMsE,OAC1BA,EAAOzE,GAAiB,WAATA,EAAoBC,WAAWC,GAASA,EACvD,EAAKJ,SAAS,CAAE2E,OAAQA,KAXxB,EAAKtE,MAAQ,CACTsE,OAAQ,EAAK9E,MAAM8E,OACnBrC,YAAY,GAEhB,EAAKxC,aAAe,EAAKA,aAAaQ,KAAlB,gBANJ,E,gFAiBhBrC,KAAK+B,SAAS,CAAEsC,YAAarE,KAAKoC,MAAMiC,e,+BAGlC,IAAD,OACL,OAAOrE,KAAKoC,MAAMiC,WACd,kBAAC,EAAD,CAAWE,YAAcvE,KAAK4B,MAAQ4C,YAAcxE,KAAKoC,MAAQP,aAAe,SAACC,GAAD,OAAO,EAAKD,aAAaC,IAAK2C,KAAO,kBAAM,EAAKC,sBAEhI,kBAAC,EAAD,CAASH,YAAcvE,KAAK4B,MAAQ6C,KAAO,kBAAM,EAAKC,0B,GAzBzCT,IAAMC,WAgC/B,SAASS,EAAQ/C,GACb,OACI,4BACI,4BAAMA,EAAM2C,YAAYK,MAAQ,GAChC,4BAAM,IAAItD,KAAKM,EAAM2C,YAAYmC,OAAOrF,SAASwD,gBACjD,4BAAMjD,EAAM2C,YAAYmC,OAAOjF,aAC/B,qCAAOG,EAAM2C,YAAYmC,OAAOhF,QAEhC,4BACI,yBAAK6B,UAAY,iCACb,4BAAQC,KAAK,SAASD,UAAY,eAAiBE,QAAU,WAAQ7B,EAAM6C,SAA3E,UACA,4BAAQjB,KAAK,SAASD,UAAY,eAAiBE,QAAU,WAAQ7B,EAAM2C,YAAYO,WAAvF,aAOpB,SAASR,EAAU1C,GACf,OACI,4BACI,4BAAMA,EAAM2C,YAAYK,MAAQ,GAChC,4BACI,2BAAOpB,KAAK,OAAOD,UAAY,+BAAiCtB,KAAK,UAAU2B,SAAWhC,EAAMC,aAAegC,aAAejC,EAAM2C,YAAYmC,OAAOrF,WAE3J,4BACI,2BAAOmC,KAAK,OAAOD,UAAY,+BAAiCtB,KAAK,cAAc2B,SAAWhC,EAAMC,aAAeiC,YAAY,6BAA6BD,aAAejC,EAAM2C,YAAYmC,OAAOjF,eAExM,4BACI,2BAAO+B,KAAK,SAASD,UAAY,+BAAiCtB,KAAK,SAAS4B,aAAejC,EAAM2C,YAAYmC,OAAOhF,OAASkC,SAAW,SAAC9B,GAAYA,EAAEE,OAAOG,OAAS,GAAGP,EAAMC,aAAaC,IAAQkC,IAAI,OAEjN,4BACI,yBAAKT,UAAY,iCACb,4BAAQC,KAAK,SAASD,UAAY,kBAAoBE,QAAU,SAAC3B,GAAQF,EAAM2C,YAAYQ,OAAOnD,EAAM4C,YAAYkC,QAAS9E,EAAM6C,QAAWf,cAAsCsB,IAA3BpD,EAAM4C,YAAYS,OAAuBrD,EAAM4C,YAAY9C,QAAU,GAAgC,KAA3BE,EAAM4C,YAAYU,MAAetD,EAAM4C,YAAYS,KAAKtB,OAAS,IAApS,cC1DpB,IAAIwB,EAAQ,GAwGGwB,E,YApGZ,WAAa/E,GAAQ,IAAD,8BACjB,4CAAMA,KAEDQ,MAAQ,IAAIrC,EAEjB,EAAK+E,OAAS,EAAKA,OAAOzC,KAAZ,gBACd,EAAK0C,OAAS,EAAKA,OAAO1C,KAAZ,gBACd,EAAKmE,WAAa,EAAKA,WAAWnE,KAAhB,gBAPD,E,iFAWjBrC,KAAKwG,e,mCAGM,IAAD,OACV9D,MAAM7B,EAlBE,UAkBeb,KAAKoC,MAAO,UAAW7B,EAAUE,aACpDsC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACJiC,EAAQjC,EACR,EAAKnB,SAAS,EAAKK,UAErBgB,MAAMC,QAAQC,O,6BAGdnC,GAAK,IAAD,OACJkE,OAAOC,QAAQ,mBAChB5C,MAAMxB,EA7BD,UA6BsBC,GAAK,CAC7BwB,OAAQ,WAEPI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACJiC,EAAQjC,EACR,EAAKsD,gBAEPpD,MAAMC,QAAQC,O,6BAIjBiC,GAAM,IAAD,OACT7C,MAAMxB,EA1CE,UA0CmBqE,EAAIC,UAAW,CACvC7C,OAAQ,MACRC,KAAMC,KAAKC,UAAUyC,KAEpBxC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACJiC,EAAQjC,EACR,EAAKsD,gBAEPpD,MAAMC,QAAQC,O,+BAGX,IAAD,OACN,OACG,6BACG,yBAAKC,UAAY,UACd,wBAAIA,UAAY,gBAAhB,WACA,yBAAKA,UAAY,SACd,yBAAKA,UAAY,eACd,kBAAC,kBAAD,CACGtD,UAAYD,KAAKoC,MAAMnC,UACvBwF,YAAY,4BACZrF,QAAUJ,KAAKoC,MAAMhC,QACrBsF,UAAU,0BACVC,cAAgB,gBAAG1F,EAAH,EAAGA,UAAWG,EAAd,EAAcA,QAAd,OAA4B,EAAK2B,SAAS,CAAE9B,YAAWG,aACvEwF,aAAe5F,KAAKoC,MAAMwD,aAC1BC,cAAgB,SAAAD,GAAY,OAAI,EAAK7D,SAAS,CAAE6D,kBAChDE,eAAiB,kBAAM,GACvBC,QAAU,kBAAMC,YAAW,kBAAM,EAAKQ,eAAc,WAKhE,yBAAKjD,UAAY,oBACd,2BAAOA,UAAY,oCAChB,2BAAOA,UAAY,yBAChB,4BACG,iCACA,oCACA,2CACA,sCACA,yCAGN,+BAEM4B,EAAMc,KAAI,SAACC,EAAMC,GAAP,OACP,kBAAC,EAAD,CAAYC,IAAMD,EAAIvB,MAAQuB,EAAIO,OAASR,EAAOpB,OAAS,kBAAM,EAAKA,OAAOoB,EAAKV,WAAYT,OAAS,SAAC2B,GAAD,OAAY,EAAK3B,OAAO2B,UAIxI,+BACG,kBAAC,EAAD,CAAcF,WAAaxG,KAAKwG,qB,GA5F/BvC,IAAMC,W,OCQb0C,MAdf,WACE,OACE,yBAAKzF,GAAG,OAAOoC,UAAY,aACzB,kBAAC,EAAD,MAEA,yBAAKA,UAAY,aACf,kBAAC,EAAD,MACA,kBAAC,EAAD,S,OCRRsD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.147e2c5b.chunk.js","sourcesContent":["import Moment from 'moment';\r\n\r\nclass DateRange {\r\n   constructor () {\r\n      this.startDate = Moment().startOf('month');\r\n      this.endDate = Moment().endOf('month');\r\n\r\n      // var date = new Date(), y = date.getFullYear(), m = date.getMonth();\r\n      // this.startDate = new Date(y, m, 1);\r\n      // this.endDate = new Date(y, m + 1, 0);\r\n   }\r\n   startDate;\r\n   endDate;\r\n   focusedInput;\r\n}\r\n\r\nexport default DateRange","import DateRange from \"./models/date-range\";\r\n\r\nconst api_base_url = 'https://api.backendless.com/';\r\nconst api_key = '1FF6847A-E791-15A3-FFEE-DDFB60C31600';\r\nconst api_app_key = 'F1C73522-DD64-3A93-FF4E-67CBDEDCDF00';\r\nconst api_data_url = `${api_base_url}${api_key}/${api_app_key}/data/`;\r\n\r\nexport const sortTypes = {\r\n   Ascending: ' asc',\r\n   Descending: ' desc'\r\n}\r\n\r\nexport function getApiUrlSimple(tableName, query = null) {\r\n   return query ? `${api_data_url + tableName}?${query}` : api_data_url + tableName;\r\n}\r\n\r\nexport function getApiUrl(tableName, dateRange = new DateRange(), sortBy, sortType = sortTypes.Ascending) {\r\n   return `${api_data_url + tableName}?pageSize=100&sortBy=${sortBy + sortType}&where=on_date>=${dateRange.startDate.valueOf()}%26%26on_date<=${dateRange.endDate.valueOf()}`;\r\n}\r\n\r\nexport function getApiUrlById(tableName, id) {\r\n   return `${api_data_url + tableName}/${id}`;\r\n}","class Expense {\r\n   on_date = new Date().toISOString().split('T')[0];\r\n   description = '';\r\n   amount = 0;\r\n}\r\n\r\nexport default Expense","import React from 'react';\r\nimport { getApiUrlSimple } from '../../config';\r\nimport Expense from '../../models/expense';\r\n\r\nconst table = 'Expenses';\r\nclass ExpenseCreate extends React.Component {\r\n   constructor (props) {\r\n      super(props);\r\n\r\n      this.state = new Expense();\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n   }\r\n\r\n   handleChange = (e) => {\r\n      this.setState({ [e.target.name]: e.target.name === 'amount' ? parseFloat(e.target.value) : e.target.value });\r\n   }\r\n\r\n   handleSubmit(event) {\r\n      event.preventDefault();\r\n      this.create();\r\n   }\r\n\r\n   create() {\r\n      fetch(getApiUrlSimple(table), {\r\n         method: 'post',\r\n         body: JSON.stringify(this.state)\r\n      })\r\n         .then(res => res.json())\r\n         .then((data) => {\r\n            this.setState(new Expense());\r\n            this.props.getExpenses();\r\n         })\r\n         .catch(console.log)\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <tr>\r\n            <td className={ \"text-center\" }>\r\n               <button type=\"submit\" className={ \"btn btn-danger btn-sm btn-block\" } onClick={ this.handleSubmit } disabled={ this.state.amount <= 0 || this.state.on_date === '' || this.state.description.length < 3 }>+</button>\r\n            </td>\r\n            <td>\r\n               <input type=\"date\" className={ \"form-control form-control-sm\" } name=\"on_date\" onChange={ this.handleChange } defaultValue={ this.state.on_date } />\r\n            </td>\r\n            <td>\r\n               <input type=\"text\" className={ \"form-control form-control-sm\" } name=\"description\" placeholder=\"Please write a description\" value={ this.state.description } onChange={ this.handleChange } />\r\n            </td>\r\n            <td>\r\n               <input type=\"number\" className={ \"form-control form-control-sm\" } name=\"amount\" value={ this.state.amount } onChange={ (e) => { if (e.target.value >= 0) this.handleChange(e); } } step=\"0.01\" min=\"0.01\" />\r\n            </td>\r\n            <td>\r\n            </td>\r\n         </tr>\r\n      )\r\n   }\r\n}\r\n\r\nexport default ExpenseCreate;","import React from 'react';\r\n\r\nclass ExpenseItem extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            expense: this.props.expense,\r\n            showUpdate: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { target: { name, value } } = e;\r\n        const expense = this.state.expense;\r\n        expense[name] = name === 'amount' ? parseFloat(value) : value;\r\n        this.setState({ expense: expense });\r\n    }\r\n\r\n    changeShowUpdate() {\r\n        this.setState({ showUpdate: !this.state.showUpdate })\r\n    }\r\n\r\n    render() {\r\n        return this.state.showUpdate ?\r\n            <UpdateRow parentProps={ this.props } parentState={ this.state } handleChange={ (e) => this.handleChange(e) } show={ () => this.changeShowUpdate() }></UpdateRow>\r\n            :\r\n            <ViewRow parentProps={ this.props } show={ () => this.changeShowUpdate() }></ViewRow>\r\n    }\r\n}\r\n\r\nexport default ExpenseItem;\r\n\r\n\r\nfunction ViewRow(props) {\r\n    return (\r\n        <tr>\r\n            <th>{ props.parentProps.index + 1 }</th>\r\n            <td>{ new Date(props.parentProps.expense.on_date).toDateString() }</td>\r\n            <td>{ props.parentProps.expense.description }</td>\r\n            <td>₺{ props.parentProps.expense.amount }</td>\r\n\r\n            <td>\r\n                <div className={ \"btn-group btn-group-sm d-flex\" }>\r\n                    <button type=\"button\" className={ \"btn btn-info\" } onClick={ () => { props.show() } }>Update</button>\r\n                    <button type=\"button\" className={ \"btn btn-dark\" } onClick={ () => { props.parentProps.delete(); } }>Delete</button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nfunction UpdateRow(props) {\r\n    return (\r\n        <tr>\r\n            <th>{ props.parentProps.index + 1 }</th>\r\n            <td>\r\n                <input type=\"date\" className={ \"form-control form-control-sm\" } name=\"on_date\" onChange={ props.handleChange } defaultValue={ props.parentProps.expense.on_date } />\r\n            </td>\r\n            <td>\r\n                <input type=\"text\" className={ \"form-control form-control-sm\" } name=\"description\" onChange={ props.handleChange } placeholder=\"Please write a description\" defaultValue={ props.parentProps.expense.description } />\r\n            </td>\r\n            <td>\r\n                <input type=\"number\" className={ \"form-control form-control-sm\" } name=\"amount\" defaultValue={ props.parentProps.expense.amount } onChange={ (e) => { if (e.target.value >= 0) props.handleChange(e); } } min=\"0\" />\r\n            </td>\r\n            <td>\r\n                <div className={ \"btn-group btn-group-sm d-flex\" }>\r\n                    <button type=\"button\" className={ \"btn btn-primary\" } onClick={ (e) => { props.parentProps.update(props.parentState.expense); props.show() } } disabled={ props.parentState.text !== undefined && (props.parentState.amount <= 0 || props.parentState.date === '' || props.parentState.text.length < 3) }>Confirm</button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}","import React from 'react';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport { getApiUrl, getApiUrlById, sortTypes } from '../../config';\r\nimport DateRange from '../../models/date-range';\r\nimport ExpenseCreate from './ExpenseCreate';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nlet items = [];\r\nconst table = 'Expenses';\r\n\r\nclass Expenses extends React.Component {\r\n   constructor (props) {\r\n      super(props);\r\n\r\n      this.state = new DateRange();\r\n\r\n      this.delete = this.delete.bind(this);\r\n      this.update = this.update.bind(this);\r\n      this.getExpenses = this.getExpenses.bind(this);\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.getExpenses();\r\n   }\r\n\r\n   getExpenses() {\r\n      fetch(getApiUrl(table, this.state, 'on_date', sortTypes.Descending))\r\n         .then(res => res.json())\r\n         .then((data) => {\r\n            items = data;\r\n            this.setState(this.state);\r\n         })\r\n         .catch(console.log)\r\n   }\r\n\r\n   delete(id) {\r\n      if (window.confirm(\"Are you sure ?\")) {\r\n         fetch(getApiUrlById(table, id), {\r\n            method: 'delete'\r\n         })\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n               items = data;\r\n               this.getExpenses();\r\n            })\r\n            .catch(console.log)\r\n      }\r\n   }\r\n\r\n   update(obj) {\r\n      fetch(getApiUrlById(table, obj.objectId), {\r\n         method: 'put',\r\n         body: JSON.stringify(obj)\r\n      })\r\n         .then(res => res.json())\r\n         .then((data) => {\r\n            items = data;\r\n            this.getExpenses();\r\n         })\r\n         .catch(console.log)\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <div className={ 'd-flex' }>\r\n               <h3 className={ \"text-danger\" }>Expenses</h3>\r\n               <div className={ 'w-100' }>\r\n                  <div className={ 'float-right' }>\r\n                     <DateRangePicker\r\n                        startDate={ this.state.startDate } // momentPropTypes.momentObj or null,\r\n                        startDateId=\"expense_startDate_id\" // PropTypes.string.isRequired,\r\n                        endDate={ this.state.endDate } // momentPropTypes.momentObj or null,\r\n                        endDateId=\"expense_endDate_id\" // PropTypes.string.isRequired,\r\n                        onDatesChange={ ({ startDate, endDate }) => this.setState({ startDate, endDate }) } // PropTypes.func.isRequired,\r\n                        focusedInput={ this.state.focusedInput } // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n                        onFocusChange={ focusedInput => this.setState({ focusedInput }) } // PropTypes.func.isRequired,\r\n                        isOutsideRange={ () => false }\r\n                        onClose={ () => setTimeout(() => this.getExpenses(), 100) }\r\n                     />\r\n                  </div>\r\n               </div>\r\n            </div>\r\n\r\n            <div className={ 'table-responsive' }>\r\n               <table className={ \"table table-hover table-bordered\" }>\r\n                  <thead className={ \"bg-danger text-light\" }>\r\n                     <tr>\r\n                        <th>#</th>\r\n                        <th>Date</th>\r\n                        <th>Description</th>\r\n                        <th>Amount</th>\r\n                        <th>Actions</th>\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {\r\n                        items.map((item, i) =>\r\n                           <ExpenseItem key={ i } index={ i } expense={ item } delete={ () => this.delete(item.objectId) } update={ (expense) => this.update(expense) } />\r\n                        )\r\n                     }\r\n                  </tbody>\r\n                  <tfoot>\r\n                     <ExpenseCreate getExpenses={ this.getExpenses } />\r\n                  </tfoot>\r\n               </table>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Expenses;","import React, { Component } from 'react';\r\nimport './style.scss';\r\n\r\nclass Header extends Component {\r\n   render() {\r\n      return (\r\n         <div className={ 'jumbotron' }>\r\n            <div className={ 'container' }>\r\n               <h1 className={ 'display-4' }>Pocket Friend</h1>\r\n               <p className={ 'lead' }>Your pocket's best friend!</p>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Header;","class Income {\r\n   on_date = new Date().toISOString().split('T')[0];\r\n   description = '';\r\n   amount = 0;\r\n}\r\n\r\nexport default Income","import React from 'react';\r\nimport { getApiUrlSimple } from '../../config';\r\nimport Income from '../../models/income';\r\n\r\nconst table = 'Incomes';\r\nclass IncomeCreate extends React.Component {\r\n   constructor (props) {\r\n      super(props);\r\n\r\n      this.state = new Income();\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n   }\r\n\r\n   handleChange = (e) => {\r\n      this.setState({ [e.target.name]: e.target.name === 'amount' ? parseFloat(e.target.value) : e.target.value });\r\n   }\r\n\r\n   handleSubmit(event) {\r\n      event.preventDefault();\r\n      this.create();\r\n   }\r\n\r\n   create() {\r\n      fetch(getApiUrlSimple(table), {\r\n         method: 'post',\r\n         body: JSON.stringify(this.state)\r\n      })\r\n         .then(res => res.json())\r\n         .then((data) => {\r\n            this.setState(new Income());\r\n            this.props.getIncomes();\r\n         })\r\n         .catch(console.log)\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <tr>\r\n            <td className={ \"text-center\" }>\r\n               <button type=\"submit\" className={ \"btn btn-success btn-sm btn-block\" } onClick={ this.handleSubmit } disabled={ this.state.amount <= 0 || this.state.on_date === '' || this.state.description.length < 3 }>+</button>\r\n            </td>\r\n            <td>\r\n               <input type=\"date\" className={ \"form-control form-control-sm\" } name=\"on_date\" onChange={ this.handleChange } defaultValue={ this.state.on_date } />\r\n            </td>\r\n            <td>\r\n               <input type=\"text\" className={ \"form-control form-control-sm\" } name=\"description\" placeholder=\"Please write a description\" value={ this.state.description } onChange={ this.handleChange } />\r\n            </td>\r\n            <td>\r\n               <input type=\"number\" className={ \"form-control form-control-sm\" } name=\"amount\" value={ this.state.amount } onChange={ (e) => { if (e.target.value >= 0) this.handleChange(e); } } step=\"0.01\" min=\"0.01\" />\r\n            </td>\r\n            <td>\r\n            </td>\r\n         </tr>\r\n      )\r\n   }\r\n}\r\n\r\nexport default IncomeCreate;","import React from 'react';\r\n\r\nclass IncomeItem extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            income: this.props.income,\r\n            showUpdate: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { target: { name, value } } = e;\r\n        const income = this.state.income;\r\n        income[name] = name === 'amount' ? parseFloat(value) : value;\r\n        this.setState({ income: income });\r\n    }\r\n\r\n    changeShowUpdate() {\r\n        this.setState({ showUpdate: !this.state.showUpdate })\r\n    }\r\n\r\n    render() {\r\n        return this.state.showUpdate ?\r\n            <UpdateRow parentProps={ this.props } parentState={ this.state } handleChange={ (e) => this.handleChange(e) } show={ () => this.changeShowUpdate() }></UpdateRow>\r\n            :\r\n            <ViewRow parentProps={ this.props } show={ () => this.changeShowUpdate() }></ViewRow>\r\n    }\r\n}\r\n\r\nexport default IncomeItem;\r\n\r\n\r\nfunction ViewRow(props) {\r\n    return (\r\n        <tr>\r\n            <th>{ props.parentProps.index + 1 }</th>\r\n            <td>{ new Date(props.parentProps.income.on_date).toDateString() }</td>\r\n            <td>{ props.parentProps.income.description }</td>\r\n            <td>₺{ props.parentProps.income.amount }</td>\r\n\r\n            <td>\r\n                <div className={ \"btn-group btn-group-sm d-flex\" }>\r\n                    <button type=\"button\" className={ \"btn btn-info\" } onClick={ () => { props.show() } }>Update</button>\r\n                    <button type=\"button\" className={ \"btn btn-dark\" } onClick={ () => { props.parentProps.delete(); } }>Delete</button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nfunction UpdateRow(props) {\r\n    return (\r\n        <tr>\r\n            <th>{ props.parentProps.index + 1 }</th>\r\n            <td>\r\n                <input type=\"date\" className={ \"form-control form-control-sm\" } name=\"on_date\" onChange={ props.handleChange } defaultValue={ props.parentProps.income.on_date } />\r\n            </td>\r\n            <td>\r\n                <input type=\"text\" className={ \"form-control form-control-sm\" } name=\"description\" onChange={ props.handleChange } placeholder=\"Please write a description\" defaultValue={ props.parentProps.income.description } />\r\n            </td>\r\n            <td>\r\n                <input type=\"number\" className={ \"form-control form-control-sm\" } name=\"amount\" defaultValue={ props.parentProps.income.amount } onChange={ (e) => { if (e.target.value >= 0) props.handleChange(e); } } min=\"0\" />\r\n            </td>\r\n            <td>\r\n                <div className={ \"btn-group btn-group-sm d-flex\" }>\r\n                    <button type=\"button\" className={ \"btn btn-primary\" } onClick={ (e) => { props.parentProps.update(props.parentState.income); props.show() } } disabled={ props.parentState.text !== undefined && (props.parentState.amount <= 0 || props.parentState.date === '' || props.parentState.text.length < 3) }>Confirm</button>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n}","import React from 'react';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport { getApiUrl, getApiUrlById, sortTypes } from '../../config';\r\nimport DateRange from '../../models/date-range';\r\nimport IncomeCreate from './IncomeCreate';\r\nimport IncomeItem from './IncomeItem';\r\n\r\nlet items = [];\r\nconst table = 'Incomes';\r\n\r\nclass Incomes extends React.Component {\r\n   constructor (props) {\r\n      super(props);\r\n\r\n      this.state = new DateRange();\r\n\r\n      this.delete = this.delete.bind(this);\r\n      this.update = this.update.bind(this);\r\n      this.getIncomes = this.getIncomes.bind(this);\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.getIncomes();\r\n   }\r\n\r\n   getIncomes() {\r\n      fetch(getApiUrl(table, this.state, 'on_date', sortTypes.Descending))\r\n         .then(res => res.json())\r\n         .then((data) => {\r\n            items = data;\r\n            this.setState(this.state);\r\n         })\r\n         .catch(console.log)\r\n   }\r\n\r\n   delete(id) {\r\n      if (window.confirm(\"Are you sure ?\")) {\r\n         fetch(getApiUrlById(table, id), {\r\n            method: 'delete'\r\n         })\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n               items = data;\r\n               this.getIncomes();\r\n            })\r\n            .catch(console.log)\r\n      }\r\n   }\r\n\r\n   update(obj) {\r\n      fetch(getApiUrlById(table, obj.objectId), {\r\n         method: 'put',\r\n         body: JSON.stringify(obj)\r\n      })\r\n         .then(res => res.json())\r\n         .then((data) => {\r\n            items = data;\r\n            this.getIncomes();\r\n         })\r\n         .catch(console.log)\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <div className={ 'd-flex' }>\r\n               <h3 className={ \"text-success\" }>Incomes</h3>\r\n               <div className={ 'w-100' }>\r\n                  <div className={ 'float-right' }>\r\n                     <DateRangePicker\r\n                        startDate={ this.state.startDate } // momentPropTypes.momentObj or null,\r\n                        startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\r\n                        endDate={ this.state.endDate } // momentPropTypes.momentObj or null,\r\n                        endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\r\n                        onDatesChange={ ({ startDate, endDate }) => this.setState({ startDate, endDate }) } // PropTypes.func.isRequired,\r\n                        focusedInput={ this.state.focusedInput } // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n                        onFocusChange={ focusedInput => this.setState({ focusedInput }) } // PropTypes.func.isRequired,\r\n                        isOutsideRange={ () => false }\r\n                        onClose={ () => setTimeout(() => this.getIncomes(), 100) }\r\n                     />\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className={ 'table-responsive' }>\r\n               <table className={ \"table table-hover table-bordered\" }>\r\n                  <thead className={ \"bg-success text-light\" }>\r\n                     <tr>\r\n                        <th>#</th>\r\n                        <th>Date</th>\r\n                        <th>Description</th>\r\n                        <th>Amount</th>\r\n                        <th>Actions</th>\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                     {\r\n                        items.map((item, i) =>\r\n                           <IncomeItem key={ i } index={ i } income={ item } delete={ () => this.delete(item.objectId) } update={ (income) => this.update(income) } />\r\n                        )\r\n                     }\r\n                  </tbody>\r\n                  <tfoot>\r\n                     <IncomeCreate getIncomes={ this.getIncomes } />\r\n                  </tfoot>\r\n               </table>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Incomes;","import React from 'react';\r\nimport Expenses from '../Expenses';\r\nimport Header from '../Header/index';\r\nimport Incomes from '../Incomes/';\r\nimport './style.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div id=\"main\" className={ 'container' }>\r\n      <Header />\r\n\r\n      <div className={ 'col-lg-12' }>\r\n        <Incomes />\r\n        <Expenses />\r\n      </div>\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/index';\r\nimport './index.scss';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}
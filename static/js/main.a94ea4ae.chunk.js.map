{"version":3,"sources":["components/Header/index.js","models/date-range.jsx","models/expense.js","models/income.js","services/AlertService.jsx","services/ApiService.jsx","services/ExpenseService.jsx","services/IncomeService.jsx","components/Expenses/Expense.jsx","components/Incomes/Incomes.jsx","components/Transactions/Summary/Summary.jsx","components/Transactions/Transactions.jsx","components/App/index.js","index.js"],"names":["Header","className","role","aria-label","Component","DateRange","this","startDate","Moment","startOf","endDate","endOf","Expense","amount","description","on_date","Date","toISOString","split","console","log","Income","swal","withReactContent","Swal","ShowDeleteConfirmation","fire","title","text","icon","showCancelButton","confirmButtonText","ShowDeleteSuccess","ShowQueue","progressSteps","queueItems","mixin","queue","api_data_url","sortTypes","Ascending","Descending","getApiUrlSimple","tableName","query","getApiUrl","dateRange","sortBy","sortType","valueOf","getApiUrlById","id","GetExpensesAsync","a","url","fetch","then","res","json","method","obj","body","JSON","stringify","GetIncomesAsync","Expenses","props","table","scope","expenses","map","item","i","renderTag","key","objectId","collect","Intl","DateTimeFormat","format","context","onClick","update","divider","delete","Incomes","incomes","Summary","toFixed","React","incomesTotal","expensesTotal","incomesLoading","expensesLoading","Transactions","state","getIncomesAsync","bind","getExpensesAsync","getTransactions","deleteIncome","deleteExpense","newIncome","newExpense","updateIncome","updateExpense","incomeService","x","forEach","setState","expenseService","e","alertService","result","value","filter","t","income","input","inputValidator","isNaN","html","type","defaultValue","onChange","target","Number","push","expense","inputValue","splice","findIndex","startDateId","endDateId","onDatesChange","focusedInput","onFocusChange","isOutsideRange","renderCalendarInfo","small","withPortal","noBorder","block","readOnly","hideKeyboardShortcutsPanel","numberOfMonths","firstDayOfWeek","displayFormat","onClose","setTimeout","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a94ea4ae.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './style.scss';\r\n\r\nclass Header extends Component {\r\n   render() {\r\n      return (\r\n         <div className={'jumbotron'}>\r\n            <div className={'container'}>\r\n               <h1 className={'display-4'}>Pocket Friend</h1>\r\n               <p className={'lead'}>Your pocket's best friend! <span role=\"img\" aria-label=\"smile\">😊</span></p>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Header;","import Moment from 'moment';\r\n\r\nclass DateRange {\r\n   constructor () {\r\n      this.startDate = Moment().startOf('month');\r\n      this.endDate = Moment().endOf('month');\r\n\r\n      // var date = new Date(), y = date.getFullYear(), m = date.getMonth();\r\n      // this.startDate = new Date(y, m, 1);\r\n      // this.endDate = new Date(y, m + 1, 0);\r\n   }\r\n   startDate;\r\n   endDate;\r\n   focusedInput;\r\n}\r\n\r\nexport default DateRange","class Expense {\r\n\r\n   amount = 0;\r\n   description = '';\r\n   on_date = new Date().toISOString().split('T')[0];\r\n   \r\n   constructor(amount = 0, description = '', on_date = new Date()) {\r\n      console.log(amount, description, on_date);\r\n      \r\n      this.amount = amount;\r\n      this.description = description;\r\n      this.on_date = new Date(on_date).toISOString().split('T')[0];\r\n   }\r\n}\r\n\r\nexport default Expense;","class Income {\r\n\r\n   amount = 0;\r\n   description = '';\r\n   on_date = new Date().toISOString().split('T')[0];\r\n   \r\n   constructor(amount = 0, description = '', on_date = new Date()) {\r\n      console.log(amount, description, on_date);\r\n      \r\n      this.amount = amount;\r\n      this.description = description;\r\n      this.on_date = new Date(on_date).toISOString().split('T')[0];\r\n   }\r\n}\r\n\r\nexport default Income;","import Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nconst swal = withReactContent(Swal);\r\n\r\nexport function ShowDeleteConfirmation() {\r\n   return swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes!'\r\n   });\r\n}\r\nexport function ShowDeleteSuccess() {\r\n   return swal.fire(\r\n      'Deleted!',\r\n      'Item has been deleted.',\r\n      'success'\r\n   );\r\n}\r\n\r\nexport function ShowQueue(progressSteps, queueItems) {\r\n   return swal.mixin({\r\n      confirmButtonText: 'Next &rarr;',\r\n      showCancelButton: true,\r\n      progressSteps\r\n   }).queue(queueItems);\r\n}","import DateRange from \"../models/date-range\";\r\n\r\nconst api_base_url = 'https://api.backendless.com/';\r\nconst api_key = '1FF6847A-E791-15A3-FFEE-DDFB60C31600';\r\nconst api_app_key = 'F1C73522-DD64-3A93-FF4E-67CBDEDCDF00';\r\nconst api_data_url = `${api_base_url}${api_key}/${api_app_key}/data/`;\r\n\r\nexport const sortTypes = {\r\n   Ascending: ' asc',\r\n   Descending: ' desc'\r\n}\r\n\r\nexport function getApiUrlSimple(tableName, query = null) {\r\n   return query ? `${api_data_url + tableName}?${query}` : api_data_url + tableName;\r\n}\r\n\r\nexport function getApiUrl(tableName, dateRange = new DateRange(), sortBy, sortType = sortTypes.Ascending) {\r\n   return `${api_data_url + tableName}?pageSize=100&sortBy=${sortBy + sortType}&where=on_date>=${dateRange.startDate.valueOf()}%26%26on_date<=${dateRange.endDate.valueOf()}`;\r\n}\r\n\r\nexport function getApiUrlById(tableName, id) {\r\n   return `${api_data_url + tableName}/${id}`;\r\n}\r\n\r\nexport default {\r\n   getApiUrl\r\n}","import DateRange from '../models/date-range';\r\nimport { getApiUrl, getApiUrlById, getApiUrlSimple, sortTypes } from './ApiService';\r\n\r\nconst tableName = 'Expenses';\r\n\r\nexport async function GetExpensesAsync(dateRange = new DateRange(), sortBy, sortType = sortTypes.Ascending) {\r\n   const url = getApiUrl(tableName, dateRange, sortBy, sortType);\r\n   return fetch(url).then(res => res.json());\r\n}\r\n\r\nexport async function DeleteExpenseAsync(id) {\r\n   const url = getApiUrlById(tableName, id);\r\n   return fetch(url, { method: 'delete' }).then(res => res.json());\r\n}\r\n\r\n\r\nexport async function UpdateExpenseAsync(obj, id) {\r\n   const url = getApiUrlById(tableName, id);\r\n   return fetch(url, {\r\n      method: 'put',\r\n      body: JSON.stringify(obj)\r\n   }).then(res => res.json());\r\n}\r\n\r\nexport async function CreateExpenseAsync(obj) {\r\n   const url = getApiUrlSimple(tableName);\r\n   return fetch(url, {\r\n      method: 'post',\r\n      body: JSON.stringify(obj)\r\n   }).then(res => res.json());\r\n}","import DateRange from '../models/date-range';\r\nimport { getApiUrl, getApiUrlById, getApiUrlSimple, sortTypes } from './ApiService';\r\n\r\nconst tableName = 'Incomes';\r\n\r\nexport async function GetIncomesAsync(dateRange = new DateRange(), sortBy, sortType = sortTypes.Ascending) {\r\n    const url = getApiUrl(tableName, dateRange, sortBy, sortType);\r\n    return fetch(url).then(res => res.json());\r\n}\r\n\r\nexport async function DeleteIncomeAsync(id) {\r\n    const url = getApiUrlById(tableName, id);\r\n    return fetch(url, { method: 'delete' }).then(res => res.json());\r\n}\r\n\r\n\r\nexport async function UpdateIncomeAsync(obj, id) {\r\n    const url = getApiUrlById(tableName, id);\r\n    return fetch(url, {\r\n        method: 'put',\r\n        body: JSON.stringify(obj)\r\n    }).then(res => res.json());\r\n}\r\n\r\nexport async function CreateIncomeAsync(obj) {\r\n    const url = getApiUrlSimple(tableName);\r\n    return fetch(url, {\r\n        method: 'post',\r\n        body: JSON.stringify(obj)\r\n    }).then(res => res.json());\r\n}","import React from 'react';\r\nimport { ContextMenu, ContextMenuTrigger, MenuItem } from \"react-contextmenu\";\r\nimport \"../../assets/react-contextmenu.scss\";\r\n\r\nfunction Expenses(props) {\r\n   const table =\r\n      <table className=\"table table-hover table-sm\">\r\n         <thead className=\"bg-danger text-light\">\r\n            <tr>\r\n               <th scope=\"col\">#</th>\r\n               <th scope=\"col\">Date</th>\r\n               <th scope=\"col\">Description</th>\r\n               <th scope=\"col\">Amount</th>\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {\r\n               props.expenses.map((item, i) =>\r\n                  <ContextMenuTrigger renderTag={'tr'} id={'expenses-context'} key={item.objectId} collect={() => item}>\r\n                     <th scope=\"row\">{i + 1}</th>\r\n                     <td>{new Intl.DateTimeFormat('tr-TR').format(new Date(item.on_date))}</td>\r\n                     <td>{item.description}</td>\r\n                     <td className=\"text-danger font-weight-bold\">-{item.amount}TL</td>\r\n                  </ContextMenuTrigger>\r\n               )\r\n            }\r\n         </tbody>\r\n      </table>;\r\n\r\n   const context =\r\n      <ContextMenu id={'expenses-context'}>\r\n         <MenuItem onClick={props.update}><i className=\"icon-edit mr-1\" /> Edit</MenuItem>\r\n         <MenuItem divider />\r\n         <MenuItem onClick={props.delete}><i className=\"icon-delete mr-1\" /> Delete</MenuItem>\r\n      </ContextMenu>;\r\n\r\n   return (\r\n      <div>\r\n         {context}\r\n         {table}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Expenses;","import React from 'react';\r\nimport { ContextMenu, ContextMenuTrigger, MenuItem } from \"react-contextmenu\";\r\nimport \"../../assets/react-contextmenu.scss\";\r\n\r\nfunction Incomes(props) {\r\n   const table =\r\n      <table className=\"table table-hover table-sm\">\r\n         <thead className=\"bg-success text-light\">\r\n            <tr>\r\n               <th scope=\"col\">#</th>\r\n               <th scope=\"col\">Date</th>\r\n               <th scope=\"col\">Description</th>\r\n               <th scope=\"col\">Amount</th>\r\n            </tr>\r\n         </thead>\r\n         <tbody>\r\n            {\r\n               props.incomes.map((item, i) =>\r\n                  <ContextMenuTrigger renderTag={'tr'} id={'incomes-context'} key={item.objectId} collect={() => item}>\r\n                     <th scope=\"row\">{i + 1}</th>\r\n                     <td>{new Intl.DateTimeFormat('tr-TR').format(new Date(item.on_date))}</td>\r\n                     <td>{item.description}</td>\r\n                     <td className=\"text-success font-weight-bold\">{item.amount}TL</td>\r\n                  </ContextMenuTrigger>\r\n               )\r\n            }\r\n         </tbody>\r\n      </table>;\r\n\r\n   const context =\r\n      <ContextMenu id={'incomes-context'}>\r\n         <MenuItem onClick={props.update}><i className=\"icon-edit mr-1\" /> Edit</MenuItem>\r\n         <MenuItem divider />\r\n         <MenuItem onClick={props.delete}><i className=\"icon-delete mr-1\" /> Delete</MenuItem>\r\n      </ContextMenu>;\r\n\r\n   return (\r\n      <div>\r\n         {context}\r\n         {table}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Incomes;","import React from 'react';\r\nimport './Summary.scss';\r\n\r\nclass Summary extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={ 'summaries' }>\r\n                <div id=\"incomes\">\r\n                    <h4>Incomes</h4>\r\n                    <span>{ this.props.incomes.toFixed(2) }TL</span>\r\n                </div>\r\n                <div id=\"expenses\">\r\n                    <h4>Expenses</h4>\r\n                    <span>{ this.props.expenses.toFixed(2) }TL</span>\r\n                </div>\r\n                <div id=\"balance\">\r\n                    <h4>Balance</h4>\r\n                    <span>{ (this.props.incomes - this.props.expenses).toFixed(2) }TL</span>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Summary;","import React from 'react';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport DateRange from '../../models/date-range';\r\nimport Expense from '../../models/expense';\r\nimport Income from '../../models/income';\r\nimport * as alertService from '../../services/AlertService';\r\nimport { sortTypes } from '../../services/ApiService';\r\nimport * as expenseService from '../../services/ExpenseService';\r\nimport * as incomeService from '../../services/IncomeService';\r\nimport Expenses from '../Expenses/Expense';\r\nimport Incomes from '../Incomes/Incomes';\r\nimport Summary from './Summary/Summary';\r\nimport './Transactions.scss';\r\n\r\n\r\nlet incomes = [];\r\nlet expenses = [];\r\nlet incomesTotal = 0;\r\nlet expensesTotal = 0;\r\nlet incomesLoading = true;\r\nlet expensesLoading = true;\r\n\r\nclass Transactions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = new DateRange();\r\n        this.getIncomesAsync = this.getIncomesAsync.bind(this);\r\n        this.getExpensesAsync = this.getExpensesAsync.bind(this);\r\n        this.getTransactions = this.getTransactions.bind(this);\r\n        this.deleteIncome = this.deleteIncome.bind(this);\r\n        this.deleteExpense = this.deleteExpense.bind(this);\r\n        this.newIncome = this.newIncome.bind(this);\r\n        this.newExpense = this.newExpense.bind(this);\r\n        this.updateIncome = this.updateIncome.bind(this);\r\n        this.updateExpense = this.updateExpense.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTransactions();\r\n    }\r\n\r\n    getTransactions() {\r\n        this.getIncomesAsync().then(incomesLoading = false);\r\n        this.getExpensesAsync().then(expensesLoading = false);\r\n    }\r\n\r\n    async getIncomesAsync() {\r\n        incomesTotal = 0;\r\n        incomeService.GetIncomesAsync(this.state, 'on_date', sortTypes.Descending).then(x => {\r\n            incomes = x;\r\n            incomes.forEach(x => incomesTotal += x.amount);\r\n            this.setState(this.state);\r\n        });\r\n    }\r\n\r\n    async getExpensesAsync() {\r\n        expensesTotal = 0;\r\n        expenseService.GetExpensesAsync(this.state, 'on_date', sortTypes.Descending).then(x => {\r\n            expenses = x;\r\n            expenses.forEach(x => expensesTotal += x.amount);\r\n            this.setState(this.state);\r\n        });\r\n    }\r\n\r\n    deleteIncome(e, item) {\r\n        alertService.ShowDeleteConfirmation().then((result) => {\r\n            result.value &&\r\n                incomeService.DeleteIncomeAsync(item.objectId).then(x => {\r\n                    incomes = incomes.filter(t => t.objectId !== item.objectId);\r\n                    incomesTotal -= item.amount;\r\n                    this.setState(this.state);\r\n                    alertService.ShowDeleteSuccess();\r\n                });\r\n        });\r\n    }\r\n\r\n    deleteExpense(e, item) {\r\n        alertService.ShowDeleteConfirmation().then((result) => {\r\n            result.value &&\r\n                expenseService.DeleteExpenseAsync(item.objectId).then(x => {\r\n                    expenses = expenses.filter(t => t.objectId !== item.objectId);\r\n                    expensesTotal -= item.amount;\r\n                    this.setState(this.state);\r\n                    alertService.ShowDeleteSuccess();\r\n                });\r\n        });\r\n    }\r\n\r\n    newIncome() {\r\n        const income = new Income();\r\n        const queueItems = [\r\n            {\r\n                input: 'text', title: 'Amount', inputValidator: (value) => {\r\n                    if (!value || isNaN(value)) {\r\n                        return 'I said amount... 😢';\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                title: 'Date',\r\n                html: <input type=\"date\" className={\"form-control\"} defaultValue={income.on_date} onChange={x => income.on_date = x.target.value} />\r\n            },\r\n            { input: 'text', title: 'Description' }\r\n        ];\r\n        alertService.ShowQueue(['1', '2', '3'], queueItems).then(result => {\r\n            if (result.value) {\r\n                income.amount = Number(result.value[0]);\r\n                income.description = result.value[2];\r\n                incomeService.CreateIncomeAsync(income).then(x => {\r\n                    incomes.push(x);\r\n                    incomesTotal += x.amount;\r\n                    this.setState(this.state);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    newExpense() {\r\n        const expense = new Expense();\r\n        const queueItems = [\r\n            {\r\n                input: 'text', title: 'Amount', inputValidator: (value) => {\r\n                    if (!value || isNaN(value)) {\r\n                        return 'I said amount... 😢';\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                title: 'Date',\r\n                html: <input type=\"date\" className={\"form-control\"} defaultValue={expense.on_date} onChange={x => expense.on_date = x.target.value} />\r\n            },\r\n            { input: 'text', title: 'Description' }\r\n        ];\r\n        alertService.ShowQueue(['1', '2', '3'], queueItems).then(result => {\r\n            if (result.value) {\r\n                expense.amount = Number(result.value[0]);\r\n                expense.description = result.value[2];\r\n                expenseService.CreateExpenseAsync(expense).then(x => {\r\n                    expenses.push(x);\r\n                    expenses += x.amount;\r\n                    this.setState(this.state);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    updateIncome(e, item) {\r\n        const income = new Income(item.amount, item.description, item.on_date);\r\n        const queueItems = [\r\n            {\r\n                input: 'text', inputValue: income.amount, title: 'Amount', inputValidator: (value) => {\r\n                    if (!value || isNaN(value)) {\r\n                        return 'I said amount... 😢';\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                title: 'Date',\r\n                html: <input type=\"date\" className={\"form-control\"} defaultValue={income.on_date} onChange={x => income.on_date = x.target.value} />\r\n            },\r\n            { input: 'text', inputValue: income.description, title: 'Description' }\r\n        ];\r\n        alertService.ShowQueue(['1', '2', '3'], queueItems).then(result => {\r\n            if (result.value) {\r\n                income.amount = Number(result.value[0]);\r\n                income.description = result.value[2];\r\n\r\n                incomeService.UpdateIncomeAsync(income, item.objectId).then(x => {\r\n                    incomes.splice(incomes.findIndex(x => x.objectId === item.objectId), 1, x);\r\n                    incomesTotal += (x.amount - item.amount);\r\n                    this.setState(this.state);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    updateExpense(e, item) {\r\n        const expense = new Expense(item.amount, item.description, item.on_date);\r\n        const queueItems = [\r\n            {\r\n                input: 'text', inputValue: expense.amount, title: 'Amount', inputValidator: (value) => {\r\n                    if (!value || isNaN(value)) {\r\n                        return 'I said amount... 😢';\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                title: 'Date',\r\n                html: <input type=\"date\" className={\"form-control\"} defaultValue={expense.on_date} onChange={x => expense.on_date = x.target.value} />\r\n            },\r\n            { input: 'text', inputValue: expense.description, title: 'Description' }\r\n        ];\r\n        alertService.ShowQueue(['1', '2', '3'], queueItems).then(result => {\r\n            if (result.value) {\r\n                expense.amount = Number(result.value[0]);\r\n                expense.description = result.value[2];\r\n\r\n                expenseService.UpdateExpenseAsync(expense, item.objectId).then(x => {\r\n                    expenses.splice(expenses.findIndex(x => x.objectId === item.objectId), 1, x);\r\n                    expensesTotal += (x.amount - item.amount);\r\n                    this.setState(this.state);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={'summary-container'}>\r\n                    <DateRangePicker\r\n                        startDate={this.state.startDate} // momentPropTypes.momentObj or null,\r\n                        startDateId=\"start-date-input\" // PropTypes.string.isRequired,\r\n                        endDate={this.state.endDate} // momentPropTypes.momentObj or null,\r\n                        endDateId=\"end-date-input\" // PropTypes.string.isRequired,\r\n                        onDatesChange={({ startDate, endDate }) => this.setState({ startDate, endDate })} // PropTypes.func.isRequired,\r\n                        focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\r\n                        onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\r\n                        isOutsideRange={() => false}\r\n                        renderCalendarInfo={() => false}\r\n                        small={false}\r\n                        withPortal={true}\r\n                        noBorder={true}\r\n                        block={true}\r\n                        readOnly={true}\r\n                        hideKeyboardShortcutsPanel={true}\r\n                        numberOfMonths={1}\r\n                        firstDayOfWeek={1}\r\n                        displayFormat={'DD.MM.YYYY'}\r\n                        onClose={() => setTimeout(() => this.getTransactions(), 100)}\r\n                    />\r\n                    <Summary incomes={incomesTotal} expenses={expensesTotal} />\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div>\r\n\r\n                    <div className=\"d-flex\">\r\n                        <h3 className=\"text-success\" >Incomes</h3>\r\n                        <div className=\"d-flex ml-2\">\r\n                            <button className=\"btn btn-sm btn-success m-auto\" onClick={this.newIncome}>\r\n                                <i className=\"icon-add\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    {incomesLoading ? 'Loading...' : (incomes.length > 0 ? <Incomes incomes={incomes} delete={this.deleteIncome} update={this.updateIncome} /> : '- You have no incomes. 😢')}\r\n                    <br />\r\n                    <div className=\"d-flex\">\r\n                        <h3 className=\"text-danger\">Expenses</h3>\r\n                        <div className=\"d-flex ml-2\">\r\n                            <button className=\"btn btn-sm btn-danger m-auto\" onClick={this.newExpense}>\r\n                                <i className=\"icon-add\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    {expensesLoading ? 'Loading...' : (expenses.length > 0 ? <Expenses expenses={expenses} delete={this.deleteExpense} update={this.updateExpense}/> : '- You have no expenses! 😁')}\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Transactions;","import React from 'react';\r\nimport Header from '../Header/index';\r\nimport Transactions from '../Transactions/Transactions';\r\nimport './style.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div id=\"main\" className={'container'}>\r\n      <Header />\r\n\r\n      <div className={'col-sm-12 col-lg-6 offset-lg-3'}>\r\n        <Transactions />\r\n      </div>\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/icon-pack.scss';\r\nimport App from './components/App/index';\r\nimport './index.scss';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}